<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-05T09:24:06 PDT" name="Suite" finished-at="2024-09-05T09:25:14 PDT" duration-ms="68471">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidations.LoginErrorValidations()[pri:0, instance:rahulshettyacademy.tests.ErrorValidations@700fb871]" name="LoginErrorValidations" class="rahulshettyacademy.tests.ErrorValidations"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="submitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.tests.submitOrderTest@eadd4fb]" name="submitOrder" class="rahulshettyacademy.tests.submitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2024-09-05T09:24:06 PDT" name="Error Validations Test" finished-at="2024-09-05T09:24:53 PDT" duration-ms="47456">
      <class name="rahulshettyacademy.tests.ErrorValidations">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.tests.ErrorValidations@700fb871]" started-at="2024-09-05T09:24:06 PDT" name="launchApplication" finished-at="2024-09-05T09:24:18 PDT" duration-ms="12240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidations()[pri:0, instance:rahulshettyacademy.tests.ErrorValidations@700fb871]" started-at="2024-09-05T09:24:18 PDT" name="LoginErrorValidations" finished-at="2024-09-05T09:24:19 PDT" duration-ms="1183" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at rahulshettyacademy.tests.ErrorValidations.LoginErrorValidations(ErrorValidations.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidations -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.tests.ErrorValidations@700fb871]" started-at="2024-09-05T09:24:19 PDT" name="tearDown" finished-at="2024-09-05T09:24:19 PDT" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.tests.ErrorValidations@700fb871]" started-at="2024-09-05T09:24:19 PDT" name="launchApplication" finished-at="2024-09-05T09:24:24 PDT" duration-ms="4943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidations()[pri:0, instance:rahulshettyacademy.tests.ErrorValidations@700fb871]" started-at="2024-09-05T09:24:24 PDT" name="LoginErrorValidations" finished-at="2024-09-05T09:24:25 PDT" duration-ms="815" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at rahulshettyacademy.tests.ErrorValidations.LoginErrorValidations(ErrorValidations.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidations -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.tests.ErrorValidations@700fb871]" started-at="2024-09-05T09:24:26 PDT" name="tearDown" finished-at="2024-09-05T09:24:26 PDT" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.tests.ErrorValidations@700fb871]" started-at="2024-09-05T09:24:26 PDT" name="launchApplication" finished-at="2024-09-05T09:24:36 PDT" duration-ms="10025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidations()[pri:0, instance:rahulshettyacademy.tests.ErrorValidations@700fb871]" started-at="2024-09-05T09:24:36 PDT" name="ProductErrorValidations" finished-at="2024-09-05T09:24:53 PDT" duration-ms="16842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidations -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.tests.ErrorValidations@700fb871]" started-at="2024-09-05T09:24:53 PDT" name="tearDown" finished-at="2024-09-05T09:24:53 PDT" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.tests.ErrorValidations -->
    </test> <!-- Error Validations Test -->
    <test started-at="2024-09-05T09:24:06 PDT" name="submit Order Test" finished-at="2024-09-05T09:25:14 PDT" duration-ms="68471">
      <class name="rahulshettyacademy.tests.submitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.tests.submitOrderTest@eadd4fb]" started-at="2024-09-05T09:24:06 PDT" name="launchApplication" finished-at="2024-09-05T09:24:18 PDT" duration-ms="11835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.tests.submitOrderTest@eadd4fb]" started-at="2024-09-05T09:24:18 PDT" name="submitOrder" data-provider="getData" finished-at="2024-09-05T09:24:39 PDT" duration-ms="21563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{productname=ZARA COAT 3, password=!228Vishnuarcotva, email=balavel@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.tests.submitOrderTest@eadd4fb]" started-at="2024-09-05T09:24:39 PDT" name="tearDown" finished-at="2024-09-05T09:24:40 PDT" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.tests.submitOrderTest@eadd4fb]" started-at="2024-09-05T09:24:40 PDT" name="launchApplication" finished-at="2024-09-05T09:24:47 PDT" duration-ms="7228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.tests.submitOrderTest@eadd4fb]" started-at="2024-09-05T09:24:47 PDT" name="submitOrder" data-provider="getData" finished-at="2024-09-05T09:25:08 PDT" duration-ms="20935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{productname=ADIDAS ORIGINAL, password=!228Vishnuarcotva, email=tcsbala@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.tests.submitOrderTest@eadd4fb]" started-at="2024-09-05T09:25:08 PDT" name="tearDown" finished-at="2024-09-05T09:25:08 PDT" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.tests.submitOrderTest@eadd4fb]" started-at="2024-09-05T09:25:08 PDT" name="launchApplication" finished-at="2024-09-05T09:25:13 PDT" duration-ms="4784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistoryTest()[pri:0, instance:rahulshettyacademy.tests.submitOrderTest@eadd4fb]" started-at="2024-09-05T09:25:13 PDT" name="orderHistoryTest" finished-at="2024-09-05T09:25:14 PDT" depends-on-methods="rahulshettyacademy.tests.submitOrderTest.submitOrder" duration-ms="1287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.tests.submitOrderTest@eadd4fb]" started-at="2024-09-05T09:25:14 PDT" name="tearDown" finished-at="2024-09-05T09:25:14 PDT" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.tests.submitOrderTest -->
    </test> <!-- submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
